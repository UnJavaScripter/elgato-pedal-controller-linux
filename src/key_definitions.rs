// This file was automatically created at build time.
//   It extracts the key definitions of the enigo crate that are marked for linux.
//   It excludes two key definitions, `unicode` (to enter any character), and `other`.

use lazy_static::lazy_static;
use std::collections::HashMap;
use enigo::*;
lazy_static! {
    pub static ref KEY_DEFINITIONS: HashMap<&'static str, Key> = {
        let mut m = HashMap::new();
        m.insert("Alt", Key::Alt);
        m.insert("Option", Key::Option);
        m.insert("Backspace", Key::Backspace);
        m.insert("Begin", Key::Begin);
        m.insert("Break", Key::Break);
        m.insert("Cancel", Key::Cancel);
        m.insert("CapsLock", Key::CapsLock);
        m.insert("Clear", Key::Clear);
        m.insert("Control", Key::Control);
        m.insert("LControl", Key::LControl);
        m.insert("Delete", Key::Delete);
        m.insert("DownArrow", Key::DownArrow);
        m.insert("End", Key::End);
        m.insert("Escape", Key::Escape);
        m.insert("Execute", Key::Execute);
        m.insert("F1", Key::F1);
        m.insert("F2", Key::F2);
        m.insert("F3", Key::F3);
        m.insert("F4", Key::F4);
        m.insert("F5", Key::F5);
        m.insert("F6", Key::F6);
        m.insert("F7", Key::F7);
        m.insert("F8", Key::F8);
        m.insert("F9", Key::F9);
        m.insert("F10", Key::F10);
        m.insert("F11", Key::F11);
        m.insert("F12", Key::F12);
        m.insert("F13", Key::F13);
        m.insert("F14", Key::F14);
        m.insert("F15", Key::F15);
        m.insert("F16", Key::F16);
        m.insert("F17", Key::F17);
        m.insert("F18", Key::F18);
        m.insert("F19", Key::F19);
        m.insert("F20", Key::F20);
        m.insert("F21", Key::F21);
        m.insert("F22", Key::F22);
        m.insert("F23", Key::F23);
        m.insert("F24", Key::F24);
        m.insert("F25", Key::F25);
        m.insert("F26", Key::F26);
        m.insert("F27", Key::F27);
        m.insert("F28", Key::F28);
        m.insert("F29", Key::F29);
        m.insert("F30", Key::F30);
        m.insert("F31", Key::F31);
        m.insert("F32", Key::F32);
        m.insert("F33", Key::F33);
        m.insert("F34", Key::F34);
        m.insert("F35", Key::F35);
        m.insert("Find", Key::Find);
        m.insert("Hangul", Key::Hangul);
        m.insert("Hanja", Key::Hanja);
        m.insert("Help", Key::Help);
        m.insert("Home", Key::Home);
        m.insert("Insert", Key::Insert);
        m.insert("Kanji", Key::Kanji);
        m.insert("LeftArrow", Key::LeftArrow);
        m.insert("Linefeed", Key::Linefeed);
        m.insert("LMenu", Key::LMenu);
        m.insert("ModeChange", Key::ModeChange);
        m.insert("MediaNextTrack", Key::MediaNextTrack);
        m.insert("MediaPlayPause", Key::MediaPlayPause);
        m.insert("MediaPrevTrack", Key::MediaPrevTrack);
        m.insert("MediaStop", Key::MediaStop);
        m.insert("Numlock", Key::Numlock);
        m.insert("PageDown", Key::PageDown);
        m.insert("PageUp", Key::PageUp);
        m.insert("Pause", Key::Pause);
        m.insert("Print", Key::Print);
        m.insert("RControl", Key::RControl);
        m.insert("Redo", Key::Redo);
        m.insert("Return", Key::Return);
        m.insert("RightArrow", Key::RightArrow);
        m.insert("RShift", Key::RShift);
        m.insert("ScrollLock", Key::ScrollLock);
        m.insert("Select", Key::Select);
        m.insert("ScriptSwitch", Key::ScriptSwitch);
        m.insert("Shift", Key::Shift);
        m.insert("LShift", Key::LShift);
        m.insert("ShiftLock", Key::ShiftLock);
        m.insert("Space", Key::Space);
        m.insert("SysReq", Key::SysReq);
        m.insert("Tab", Key::Tab);
        m.insert("Undo", Key::Undo);
        m.insert("UpArrow", Key::UpArrow);
        m.insert("VolumeDown", Key::VolumeDown);
        m.insert("VolumeUp", Key::VolumeUp);
        m.insert("VolumeMute", Key::VolumeMute);
        m.insert("MicMute", Key::MicMute);
        m.insert("Command", Key::Command);
        m.insert("Super", Key::Super);
        m.insert("Windows", Key::Windows);
        m.insert("Meta", Key::Meta);
        m
    };
}
